/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidaddelapunta.Vistas;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidaddelapunta.AccesoADatos.AlumnoData;
import universidaddelapunta.AccesoADatos.InscripcionData;
import universidaddelapunta.AccesoADatos.conexion;
import universidaddelapunta.AccesoADatos.materiaData;
import universidaddelapunta.Entidades.Alumno;
import universidaddelapunta.Entidades.Inscripcion;
import universidaddelapunta.Entidades.Materia;

/**
 *
 * @author carri
 */
public class FormularioInscripcion extends javax.swing.JInternalFrame {
private Connection con;
private List<Alumno> alu;
private DefaultTableModel modelo;
private InscripcionData idata;
private AlumnoData adata;
private materiaData mdata;
    /**
     * Creates new form FormularioInscripcion
     */
    public FormularioInscripcion() {
        initComponents();
        this.con=conexion.getConexion();
        modelo=new DefaultTableModel();
        adata=new AlumnoData();
        alu=adata.listarAlumno();
        idata=new InscripcionData();
        cargar();
        cabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTListaMatrias = new javax.swing.JTable();
        jBInscribir = new javax.swing.JButton();
        jBAnular = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBAlumno = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setClosable(true);
        setMaximizable(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Lista de Materias");

        jTListaMatrias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTListaMatrias);

        jBInscribir.setText("Inscribir");
        jBInscribir.setEnabled(false);
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });

        jBAnular.setText("Anular Inscripcion");
        jBAnular.setEnabled(false);
        jBAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnularActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Formulario de Inscripcion ");

        jLabel2.setText("Seleccione un Alumno");

        jRadioButton1.setText("Materias inscriptas");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Materias no inscriptas");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addGap(70, 70, 70)
                        .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jBInscribir)
                                .addGap(67, 67, 67)
                                .addComponent(jBAnular)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBSalir))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jRadioButton1)
                        .addGap(90, 90, 90)
                        .addComponent(jRadioButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(69, 69, 69)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInscribir)
                    .addComponent(jBAnular)
                    .addComponent(jBSalir))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        cargarNOInscriptas();
        jBAnular.setEnabled(false);
        jBInscribir.setEnabled(true);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jRadioButton2.setSelected(false);
        cargarInscriptas();
        jBAnular.setEnabled(true);
        jBInscribir.setEnabled(false);
        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
        // TODO add your handling code here:
        int fila = jTListaMatrias.getSelectedRow();
        Alumno a=(Alumno)jCBAlumno.getSelectedItem();
        if(fila!=-1 && a!=null){            
            int idm=(Integer)modelo.getValueAt(fila, 0);
            String n=(String)modelo.getValueAt(fila, 1);
            int an=(Integer)modelo.getValueAt(fila, 2);
            Materia ma=new Materia(idm,n,an,true);
            Inscripcion i=new Inscripcion(a,ma,0);
            idata.guardarInscripcion(i);
            borrarlista();
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }//GEN-LAST:event_jBInscribirActionPerformed

    private void jBAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnularActionPerformed
        // TODO add your handling code here:
        int fila = jTListaMatrias.getSelectedRow();
        Alumno a=(Alumno)jCBAlumno.getSelectedItem();
        if(fila!=-1 && a!=null){            
            int idm=(Integer)modelo.getValueAt(fila, 0);           
            idata.borrarInscripcionMateriaAlumno(a.getIdAlumno(), idm);
            borrarlista();
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }//GEN-LAST:event_jBAnularActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAnular;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTListaMatrias;
    // End of variables declaration//GEN-END:variables
    private void cargar(){
        for(Alumno a:alu){
            jCBAlumno.addItem(a);
        }
    }
    public void cabecera(){
        ArrayList<Object> col=new ArrayList();
        col.add("id");
        col.add("nombre");
        col.add("anio");
        for(Object o:col){
            modelo.addColumn(o);
        }
        jTListaMatrias.setModel(modelo);
    }
    public void borrarlista(){
    int a=modelo.getRowCount()-1;
    for(int i=a;i>=0;i--){
        modelo.removeRow(i);
    }
}
    public void cargarInscriptas(){
        borrarlista();
        Alumno a=(Alumno)jCBAlumno.getSelectedItem();
        if(a!=null){
        ArrayList<Materia> lista= (ArrayList) idata.obtenerMateriasCursadas(a.getIdAlumno());
        for(Materia mat:lista){
            modelo.addRow(new Object[]{mat.getIdMateria(),mat.getNombre(),mat.getAnio()});
        }
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }
    public void cargarNOInscriptas(){
        borrarlista();
        Alumno a=(Alumno)jCBAlumno.getSelectedItem();
        if(a != null){
        ArrayList<Materia> lista= (ArrayList) idata.obtenerMateriasNOCursadas(a.getIdAlumno());
        for(Materia mat:lista){
            modelo.addRow(new Object[]{mat.getIdMateria(),mat.getNombre(),mat.getAnio()});
        }
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }
}
